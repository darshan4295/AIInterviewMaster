{
  "openapi": "3.0.0",
  "info": {
    "title": "AI Interview Platform API",
    "description": "API documentation for the AI-Powered Technical Interview Platform",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "API Server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User registration and authentication endpoints"
    },
    {
      "name": "Candidates",
      "description": "Candidate profile and assessment endpoints"
    },
    {
      "name": "Interviews",
      "description": "Interview scheduling and management endpoints"
    },
    {
      "name": "Assessments",
      "description": "Candidate skill assessment endpoints"
    },
    {
      "name": "Coding",
      "description": "Coding challenge and evaluation endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Register a new candidate or recruiter account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "email", "password", "first_name", "last_name"],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securepassword"
                  },
                  "is_recruiter": {
                    "type": "boolean",
                    "example": false
                  },
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "phone": {
                    "type": "string",
                    "example": "123-456-7890"
                  },
                  "linkedin_url": {
                    "type": "string",
                    "example": "https://linkedin.com/in/johndoe"
                  },
                  "github_url": {
                    "type": "string",
                    "example": "https://github.com/johndoe"
                  },
                  "experience_years": {
                    "type": "integer",
                    "example": 5
                  },
                  "company": {
                    "type": "string",
                    "example": "Tech Corp"
                  },
                  "position": {
                    "type": "string",
                    "example": "HR Manager"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "user_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Username already taken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login a user",
        "description": "Authenticate a user and return a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username_or_email", "password"],
                "properties": {
                  "username_or_email": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securepassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "user_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_recruiter": {
                      "type": "boolean",
                      "example": false
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid username/email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/candidates": {
      "get": {
        "tags": ["Candidates"],
        "summary": "Get all candidates",
        "description": "Get a list of all candidate profiles",
        "parameters": [
          {
            "name": "skill",
            "in": "query",
            "description": "Filter by skill name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "description": "Filter by minimum years of experience",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of candidates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "candidates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "preferred_role": {
                            "type": "string"
                          },
                          "experience_years": {
                            "type": "integer"
                          },
                          "skills": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "offset": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/candidates/{candidate_id}": {
      "get": {
        "tags": ["Candidates"],
        "summary": "Get candidate profile",
        "description": "Get detailed candidate profile by ID",
        "parameters": [
          {
            "name": "candidate_id",
            "in": "path",
            "required": true,
            "description": "ID of the candidate",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "linkedin_url": {
                      "type": "string"
                    },
                    "github_url": {
                      "type": "string"
                    },
                    "resume_url": {
                      "type": "string"
                    },
                    "experience_years": {
                      "type": "integer"
                    },
                    "preferred_role": {
                      "type": "string"
                    },
                    "skills": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "skill_assessments": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Candidate not found"
          }
        }
      }
    },
    "/candidates/profile": {
      "get": {
        "tags": ["Candidates"],
        "summary": "Get current candidate's profile",
        "description": "Get profile for the authenticated candidate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "put": {
        "tags": ["Candidates"],
        "summary": "Update candidate profile",
        "description": "Update profile for the authenticated candidate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "linkedin_url": {
                    "type": "string"
                  },
                  "github_url": {
                    "type": "string"
                  },
                  "experience_years": {
                    "type": "integer"
                  },
                  "preferred_role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      }
    },
    "/interviews": {
      "get": {
        "tags": ["Interviews"],
        "summary": "Get user's interviews",
        "description": "Get interviews for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status (scheduled, completed, cancelled)",
            "schema": {
              "type": "string",
              "enum": ["scheduled", "completed", "cancelled"]
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Filter by date range start (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Filter by date range end (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of interviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Interviews"],
        "summary": "Schedule a new interview",
        "description": "Create a new interview (recruiters only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["candidate_id", "position_id", "scheduled_time"],
                "properties": {
                  "candidate_id": {
                    "type": "integer"
                  },
                  "position_id": {
                    "type": "integer"
                  },
                  "scheduled_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "duration_minutes": {
                    "type": "integer",
                    "default": 60
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Interview scheduled successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/coding/challenges": {
      "get": {
        "tags": ["Coding"],
        "summary": "Get coding challenges",
        "description": "Get coding challenges for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "difficulty",
            "in": "query",
            "description": "Filter by difficulty",
            "schema": {
              "type": "string",
              "enum": ["easy", "medium", "hard"]
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Filter by programming language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["completed", "pending"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of coding challenges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Coding"],
        "summary": "Create a coding challenge",
        "description": "Create a new coding challenge (recruiters only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["candidate_id", "title", "description", "difficulty", "language"],
                "properties": {
                  "candidate_id": {
                    "type": "integer"
                  },
                  "interview_id": {
                    "type": "integer"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "difficulty": {
                    "type": "string",
                    "enum": ["easy", "medium", "hard"]
                  },
                  "language": {
                    "type": "string"
                  },
                  "generate_test_cases": {
                    "type": "boolean"
                  },
                  "test_cases": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coding challenge created successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/assessment/job-skills": {
      "post": {
        "tags": ["Assessments"],
        "summary": "Extract job skills",
        "description": "Extract required skills from a job description",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["job_description"],
                "properties": {
                  "job_description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Extracted skills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "essential_skills": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "preferred_skills": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "mentioned_skills": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
